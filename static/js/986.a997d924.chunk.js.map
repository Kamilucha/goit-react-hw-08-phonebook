{"version":3,"file":"static/js/986.a997d924.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/Contacts/Contacts.styled.jsx","redux/contacts/selector.js","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","components/Form/Form.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  padding: 20px 50px 20px 40px;\n  width: 300px;\n  border: 2.4px solid #F6F6F6;\n  background-color: transparent;\n  border-radius: 40px;\n  font-family: 'DM Sans';\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.33;\n  letter-spacing: -0.01em;\n  color: #F6F6F6;\n  margin-top: 16px;`\n\nexport const Label = styled.label`\n  color: #F6F6F6;\n  font-family: DM Sans;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 18px;\nletter-spacing: -0.28px;\ntext-transform: uppercase;\ndisplay: flex;\nflex-direction: column;\nmargin-bottom: 16px;\n\n`\n\nexport const FormContainer = styled.form`\ndisplay: flex;\nflex-direction: column;\n\n`\n\nexport const Button = styled.button`\n  color: #F6F6F6;\n  padding: 14px 28px;\n\n  min-width: 124px;\n  height: 46px;\n\n  border: 2px solid #F6F6F6;\n  background-color: transparent;\n  border-radius: 40px;\n\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.29;\n\n  letter-spacing: -0.01em;\n  text-transform: uppercase;\n\n  margin-top: 8px;\n  max-width: 180px;`","import styled from '@emotion/styled'\n\nexport const Item = styled.li`\ndisplay: flex;\n`\nexport const Text = styled.p`\ncolor: white;\nmargin-right: 30px;\n`\n","import PropTypes from 'prop-types'\nimport { useDispatch } from 'react-redux';\nimport { Button } from 'components/Form/Form.styled'\nimport { Item, Text } from './ContactItem.styled'\nimport { deleteContactThunk } from 'redux/thunk';\n\nexport const ContactItem = ({ name, number, id }) => {\n\n    const dispatch = useDispatch();\n\n    const handleDeleteContact = () => dispatch(deleteContactThunk(id));\n    \n    return (\n        <Item key={id}>\n        <Text>{name} : {number}</Text>\n         <Button type=\"button\" onClick={handleDeleteContact}>Delete üóëÔ∏è</Button>\n         </Item>)\n           \n}\n\nContactItem.propTypes = {\n    name: PropTypes.string.isRequired, \n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired, \n}","import styled from '@emotion/styled'\n\nexport const List = styled.ul`\n\n`","export const getContacts = state => state.contacts.contacts.items;\n\nexport const getIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const getError = state => state.contacts.contacts.error;\n\nexport const getFilter = state => state.filter.filter;","import { ContactItem } from \"components/ContactItem/ContactItem\"\nimport { List } from './Contacts.styled'\nimport { getContacts, getFilter } from 'redux/contacts/selector';\nimport { useSelector } from 'react-redux';\n\n\n\nconst getVisibleContacts = (contacts, filter) => {\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport const Contacts = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n    return (<List>\n        {visibleContacts.map(({ id, name, number }) => (\n            <ContactItem key={id}\n                id={id}\n                name={name}\n                number={number}\n           />\n            \n        ))}\n    </List>)\n}\n","\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selector';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { Input, Label } from 'components/Form/Form.styled'\n\nexport const Filter = () => {\n\n    const dispatch = useDispatch();\n    const filter = useSelector(getFilter);\n    \n    const changeFilter = e => {\n\n        const { value } = e.target;\n\n        dispatch(setFilter(value));\n        \n    };\n    \n    \n    return (<Label>\n        Find contacts by name\n        <Input type=\"text\" name=\"filter\" value={filter} onChange={changeFilter } />\n    </Label>\n    )\n}\n","import { useState } from \"react\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selector';\nimport { addContactsThunk } from 'redux/thunk';\nimport { Input, Label, FormContainer, Button } from \"./Form.styled\"\n\n\nconst Form = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n\n\n    const handleChange = e => {\n        const { name, value } = e.target\n        switch (name) {\n            case 'name':\n                setName(value)\n                break;\n            \n            case 'number':\n                setNumber(value)\n                break;\n        \n            default:\n                break;\n        }\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        const duplicate = contacts.some(\n      contact =>\n        contact.name.toLowerCase() === name.toLowerCase() ||\n        contact.number === number\n    );\n\n    if (duplicate) {\n        return alert (`${name} is already in contacts`);\n    }\n  \n\n        const newContact = {\n                name,\n                number,\n        };\n\n\n        dispatch(addContactsThunk(newContact));\n        console.log(newContact)\n\n        reset()\n    };\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    }\n\n\n\n    return (\n        <FormContainer onSubmit={handleSubmit}>\n            <Label> Name\n            <Input\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Z–∞-—è–ê-–Ø]+(([' \\-][a-zA-Z–∞-—è–ê-–Ø ])?[a-zA-Z–∞-—è–ê-–Ø]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                value={name}\n                onChange={handleChange}/>\n\n                </Label>\n                <Label>\n                    Number\n            <Input\n                type=\"tel\"\n                name=\"number\"\n               pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                value={number}\n                onChange={handleChange}/>\n                </Label>\n            <Button type=\"submit\">Add contact</Button>\n     </FormContainer>\n) \n}\n\n\n\nexport default Form\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { getIsLoading } from 'redux/contacts/selector';\nimport { Filter } from 'components/Filter/Filter';\nimport { getContactsThunk } from 'redux/thunk';\nimport { Loader } from 'components/Loader/Loader';\nimport Form from 'components/Form/Form';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n   dispatch (getContactsThunk())\n  }, [dispatch]);\n\n  return (\n    <>\n      <Form />\n      <HelmetProvider>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      </HelmetProvider>\n      <Filter/>\n      <Contacts />\n      {isLoading && <Loader/>}\n    </>\n  );\n}"],"names":["Input","styled","Label","FormContainer","Button","Item","Text","ContactItem","name","number","id","dispatch","useDispatch","type","onClick","deleteContactThunk","List","getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","Contacts","visibleContacts","contact","toLowerCase","includes","getVisibleContacts","useSelector","map","Filter","value","onChange","e","target","setFilter","useState","setName","setNumber","handleChange","reset","onSubmit","preventDefault","some","alert","newContact","addContactsThunk","console","log","pattern","title","required","ContactsPage","useEffect","getContactsThunk","Loader"],"sourceRoot":""}